server:
  port: 8887

hystrix.command.fallbackcmd.execution.isolation.thread.timeoutInMilliseconds: 2000
hystrix.command.default.execution.isolation.strategy: THREAD


spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: notes-store
          uri: lb://notes-store
          predicates:
            - Path=/api/v1/**
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@userKeyResolver}'
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2
            - RewritePath=/api/(?<service>.*), /$\{service}
            - TokenRelay=
            - name: Hystrix
              args:
                name: booksFallbackCommand
                fallbackUri: forward:/fallback/books

        - id: car-inventory
          #uri: lb://car-inventory
          uri: http://localhost:8010/
          predicates:
            - Path=/api/cars/**
          filters:
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@userKeyResolver}'
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2
            # - TokenRelay=
            # - RewritePath=/api/(?<cars>.*), /viewCars
            - RewritePath=/api/cars(?<service>.*), /$\{service}
            - TokenRelay=

  autoconfigure:
    # TODO: remove when fixed https://github.com/spring-projects/spring-security/issues/6314
    exclude: org.springframework.boot.actuate.autoconfigure.security.reactive.ReactiveManagementWebSecurityAutoConfiguration

  security:
    oauth2:
      client:
        registration:
          login-client:
            provider: uaa
            client-id: notes-app
            client-secret: f78b4d3d-eaf3-4076-940b-21139819c3de
            authorization-grant-type: authorization_code
            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: read,write
        provider:
          uaa:
            authorization-uri: http://localhost:8080/auth/realms/notes/protocol/openid-connect/auth
            token-uri: http://localhost:8080/auth/realms/notes/protocol/openid-connect/token
            user-info-uri: http://localhost:8080/auth/realms/notes/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
            jwk-set-uri: http://localhost:9050/auth/token_keys




eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8888/eureka
  instance:
    preferIpAddress: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
        #include: hystrix.stream


logging:
  level:
    root: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.cloud.gateway: DEBUG